
=========================

--->𝗜͟𝗻͟𝘁͟𝗿͟𝗼͟𝗱͟𝘂͟𝗰͟𝘁͟𝗶͟𝗼͟𝗻:

Go is a general-purpose language designed with systems programming in mind.
Go language is a programming language initially developed at Google in the year 2007 by Robert Griesemer, Rob Pike, and Ken Thompson.
It is a statically-typed language having syntax similar to that of C.
It provides garbage collection, type safety, dynamic-typing capability, many advanced built-in types such as variable length arrays and key-value maps.
It also provides a rich standard library.
It is strongly and statically typed, provides inbuilt support for garbage collection, and supports concurrent programming.
Programs are constructed using packages, for efficient management of dependencies.
Go programming implementations use a traditional compile and link model to generate executable binaries.
The Go programming language was launched in November 2009 and is used in some of the Google's production systems.

---> F͟e͟a͟t͟u͟r͟e͟s o͟f G͟o P͟r͟o͟g͟r͟a͟m͟m͟i͟n͟g:

The most important features of Go programming are listed below −

Support for environment adopting patterns similar to dynamic languages. For example, type inference (x := 0 is valid declaration of a variable x of type int).
Compilation time is fast.
Inbuilt concurrency support: lightweight processes (via go routines), channels, select statement.
Go programs are simple, concise, and safe.
Support for Interfaces and Type embedding.
Production of statically linked native binaries without external dependencies.

--> Features Excluded Intentionally
To keep the language simple and concise, the following features commonly available in other similar languages are omitted in Go −

Support for type inheritance.
Support for method or operator overloading.
Support for circular dependencies among packages.
Support for pointer arithmetic.
Support for assertions.
Support for generic programming.

-> What is Go?
Go is a cross-platform, open source programming language
Go can be used to create high-performance applications
Go is a fast, statically typed, compiled language that feels like a dynamically typed, interpreted language
Go was developed at Google by Robert Griesemer, Rob Pike, and Ken Thompson in 2007
Go's syntax is similar to C++

-> What is Go Used For?
Web development (server-side)
Developing network-based programs
Developing cross-platform enterprise applications
Cloud-native development

-> Why Use Go?
Go is fun and easy to learn
Go has fast run time and compilation time
Go supports concurrency
Go has memory management
Go works on different platforms (Windows, Mac, Linux, Raspberry Pi, etc.)        

Go Compared to Python and C++

Go              	                Python	                     C++

Statically typed	                Dynamically typed	         Statically typed

Fast run time	                    Slow run time	             Fast run time

Compiled	                        Interpreted	                 Compiled

Fast compile time	                Interpreted	                 Slow compile time

Supports concurrency through        No built-in concurrency      Supports concurrency through 
goroutines and channel	            mechanism                    threads
                                    	                 
Has automatic garbage               Has automatic garbage 	     Does not have automatic 
collection                          collection                   garbage collection

Does not support classes 	        Has classes and objects	     Has classes and objects
and objects

Does not support inheritance	    Supports inheritance	     Supports inheritance

--> T͟h͟e G͟o C͟o͟m͟p͟i͟l͟e͟r:

The source code written in source file is the human readable source for your program.
It needs to be compiled and turned into machine language so that your CPU can actually execute the program as per the instructions given.
The Go programming language compiler compiles the source code into its final executable program.

Go distribution comes as a binary installable for FreeBSD (release 8 and above), Linux, Mac OS X (Snow Leopard and above), and Windows operating systems with 32-bit (386) and 64-bit (amd64) x86 processor architectures.

212         /* Legal */
215u        /* Legal */
0xFeeL      /* Legal */
078         /* Illegal: 8 is not an octal digit */
032UU       /* Illegal: cannot repeat a suffix */
Following are other examples of various type of Integer literals:
85         /* decimal */
0213       /* octal */
0x4b       /* hexadecimal */
30         /* int */
30u        /* unsigned int */
30l        /* long */
30ul       /* unsigned long */

3.14159       /* Legal */
314159E-5L    /* Legal */
510E          /* Illegal: incomplete exponent */
210f          /* Illegal: no decimal or exponent */
.e55          /* Illegal: missing integer or fraction */

